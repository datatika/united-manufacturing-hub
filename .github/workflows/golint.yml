name: golint
on:
  pull_request:
    branches:
      - main

permissions:
  contents: read|write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}

jobs:
  lint-and-check:
    name: Lint and Check Go code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          token: ${{ env.GH_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.*'
      - name: Run go fmt
        run: |
          go fmt ./...
          git diff --exit-code || (
            git config user.name "GitHub Action"
            git config user.email "noreply@github.com"
            git add .
            git commit -m "Apply go fmt changes"
            git push
          )
        working-directory: ./golang
        shell: bash
      - name: Run fieldalignment with fix
        run: |
          go run golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment -fix ./...
          git diff --exit-code || (
            git config user.name "GitHub Action"
            git config user.email "noreply@github.com"
            git add .
            git commit -m "Apply fieldalignment fix changes"
            git push
          )
        working-directory: ./golang
        shell: bash
      - name: Run go vulncheck and generate report
        run: go run golang.org/x/vuln/cmd/govulncheck -o report.json ./...
        working-directory: ./golang
        shell: bash
      - name: Run golangci-lint
        run: go run github.com/golangci/golangci-lint/cmd/golangci-lint@latest run -v -c ../.golangci.yaml ./...
        working-directory: ./golang
        shell: bash
      - name: Upload vulnerability report
        uses: actions/upload-artifact@v2
        with:
          name: vulnerability-report
          path: ./golang/report.json
