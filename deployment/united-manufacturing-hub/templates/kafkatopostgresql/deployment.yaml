---
{{if or .Values.kafkatopostgresql.enabled (and .Values._000_commonConfig.infrastructure.kafka.enabled .Values._000_commonConfig.datastorage.enabled)}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql
  labels:
    {{- include "united-manufacturing-hub.labels.kafkatopostgresql" . | nindent 4}}
  {{if .Values.kafkatopostgresql.annotations}}
  annotations:
    {{- toYaml .Values.kafkatopostgresql.annotations | nindent 4}}
  {{end}}
spec:
  replicas: {{.Values.kafkatopostgresql.replicas | default 3}}
  selector:
    matchLabels:
      name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql
        {{- include "united-manufacturing-hub.labels.kafkatopostgresql" . | nindent 8}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql
                topologyKey: "kubernetes.io/hostname"
      # Be nice to kafka & the db
      terminationGracePeriodSeconds: 180
      initContainers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkabridge-init
          {{if .Values.kafkabridge.image.tag}}
          image: {{.Values.kafkabridge.initContainer.repository}}:{{.Values.kafkabridge.initContainer.tag}}
          {{- else}}
          image: {{.Values.kafkabridge.initContainer.repository}}:{{.Chart.AppVersion}}
          volumeMounts:
            - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql-certificates
              mountPath: /SSL_certs
              readOnly: true
          {{end}}
          imagePullPolicy: {{.Values.kafkabridge.initContainer.pullPolicy | default "IfNotPresent"}}
          env:
            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{include "united-manufacturing-hub.fullname" .}}-kafka:9092
            - name: KAFKA_TOPICS
              value: {{.Values._000_commonConfig.infrastructure.kafka.defaultTopics | default "ia.test.test.test.processValue;ia.test.test.test.count"}}

            - name: KAFKA_USE_SSL
              value: {{.Values._000_commonConfig.infrastructure.kafka.useSSL | default false | quote}}
            - name: KAFKA_SSL_KEY_PASSWORD
              value: {{.Values._000_commonConfig.certificates.kafkatopostgresql.sslKeyPassword | quote}}
      containers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql
          {{if .Values.kafkatopostgresql.image.tag}}
          image: {{.Values.kafkatopostgresql.image.repository}}:{{.Values.kafkatopostgresql.image.tag}}
          {{- else}}
          image: {{.Values.kafkatopostgresql.image.repository}}:{{.Chart.AppVersion}}
          {{end}}
          imagePullPolicy: {{.Values.kafkatopostgresql.image.pullPolicy | default "IfNotPresent"}}
          volumeMounts:
            - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql-certificates
              mountPath: /SSL_certs
              readOnly: true
          ports:
            - name: metrics
              containerPort: 2112
              protocol: TCP
            - name: pprof
              containerPort: 1337
              protocol: TCP
          env:

            - name: POSTGRES_HOST
              value: {{.Values.factoryinsight.db_host | default "united-manufacturing-hub"}}
            - name: POSTGRES_DATABASE
              value: {{.Values.factoryinsight.db_database | default "factoryinsight"}}
            - name: POSTGRES_USER
              value: {{.Values.factoryinsight.db_user | default "factoryinsight"}}
            - name: POSTGRES_PASSWORD
              value: {{.Values._000_commonConfig.datastorage.db_password | default "changeme"}}

            - name: LOGGING_LEVEL
              value: PRODUCTION

            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{include "united-manufacturing-hub.fullname" .}}-kafka:9092
            - name: MEMORY_REQUEST
              value: {{.Values.kafkatopostgresql.resources.requests.memory}}

            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

            - name: KAFKA_USE_SSL
              value: {{.Values._000_commonConfig.infrastructure.kafka.useSSL | default false | quote}}
            - name: KAFKA_SSL_KEY_PASSWORD
              value: {{.Values._000_commonConfig.certificates.kafkatopostgresql.sslKeyPassword | quote}}

          # define a liveness probe that checks every 5 seconds, starting after 5 seconds
          livenessProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 10
            failureThreshold: 5 # 5*periodSeconds (10) => 50 sec max startup time


          resources:
            limits:
              cpu: {{if .Values.kafkatopostgresql.resources.limits}}
              {{.Values.kafkatopostgresql.resources.limits.cpu | default "1000m"}}
              {{else}}
              1000m
              {{end}}
              memory: {{if .Values.kafkatopostgresql.resources.limits}}
              {{.Values.kafkatopostgresql.resources.limits.memory | default "1Gi"}}
              {{else}}
              1Gi
              {{end}}
            requests:
              cpu: {{if .Values.kafkatopostgresql.resources.requests}}
              {{.Values.kafkatopostgresql.resources.requests.cpu | default "200m"}}
              {{else}}
              200m
              {{end}}
              memory: {{if .Values.kafkatopostgresql.resources.requests}}
              {{.Values.kafkatopostgresql.resources.requests.memory | default "250Mi"}}
              {{else}}
              250Mi
              {{end}}
      volumes:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql-certificates
          secret:
            secretName: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresql-secrets

      serviceAccountName: ""
      restartPolicy: Always
{{end}}

